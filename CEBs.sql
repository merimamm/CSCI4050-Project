-- MySQL Script generated by MySQL Workbench
-- Wed Oct 31 20:47:48 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema CEB
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema CEB
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `CEB` DEFAULT CHARACTER SET utf8 ;
USE `CEB` ;

-- -----------------------------------------------------
-- Table `CEB`.`UserTypes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CEB`.`UserTypes` (
  `UserTypeID` INT NOT NULL,
  `UserTypeName` VARCHAR(45) NULL,
  PRIMARY KEY (`UserTypeID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CEB`.`Status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CEB`.`Status` (
  `idStatus` INT NOT NULL,
  `statusType` VARCHAR(45) NULL,
  PRIMARY KEY (`idStatus`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CEB`.`Users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CEB`.`Users` (
  `UserID` INT NOT NULL,
  `firstName` VARCHAR(45) NULL,
  `lastName` VARCHAR(45) NULL,
  `email` VARCHAR(45) NULL,
  `password` VARCHAR(45) NULL,
  `status` INT NULL,
  `userType` INT NULL,
  `age` INT NULL,
  `address` VARCHAR(45) NULL,
  `phone` VARCHAR(45) NULL,
  `enrollForPromotions` TINYINT NULL,
  PRIMARY KEY (`UserID`),
  UNIQUE INDEX `UserID_UNIQUE` (`UserID` ASC) VISIBLE,
  INDEX `userType_idx` (`userType` ASC) VISIBLE,
  INDEX `status_idx` (`status` ASC) VISIBLE,
  CONSTRAINT `userType`
    FOREIGN KEY (`userType`)
    REFERENCES `CEB`.`UserTypes` (`UserTypeID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `status`
    FOREIGN KEY (`status`)
    REFERENCES `CEB`.`Status` (`idStatus`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CEB`.`Promotions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CEB`.`Promotions` (
  `idPromotions` INT NOT NULL,
  `promoCode` VARCHAR(45) NULL,
  `percentage` INT NULL,
  `description` VARCHAR(45) NULL,
  `startDate` DATE NULL,
  `endDate` DATE NULL,
  PRIMARY KEY (`idPromotions`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CEB`.`Accounts`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CEB`.`Accounts` (
  `idAccounts` INT NOT NULL,
  `creditCardNo` VARCHAR(45) NULL,
  `CVV` INT NULL,
  `expirationDate` INT NULL,
  `type` VARCHAR(45) NULL,
  `uID` INT NULL,
  PRIMARY KEY (`idAccounts`),
  INDEX `uID_idx` (`uID` ASC) VISIBLE,
  CONSTRAINT `uID`
    FOREIGN KEY (`uID`)
    REFERENCES `CEB`.`Users` (`UserID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CEB`.`Rating`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CEB`.`Rating` (
  `idRating` INT NOT NULL,
  `RatingCode` VARCHAR(45) NULL,
  PRIMARY KEY (`idRating`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CEB`.`Movie`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CEB`.`Movie` (
  `idMovie` INT NOT NULL,
  `title` VARCHAR(45) NULL,
  `length` INT NULL,
  `rating` INT NULL,
  `cast` VARCHAR(45) NULL,
  `review` INT NULL,
  `genre` VARCHAR(45) NULL,
  `producer` VARCHAR(45) NULL,
  `picture` VARCHAR(45) NULL,
  `video` VARCHAR(45) NULL,
  PRIMARY KEY (`idMovie`),
  INDEX `rating_idx` (`rating` ASC) VISIBLE,
  CONSTRAINT `rating`
    FOREIGN KEY (`rating`)
    REFERENCES `CEB`.`Rating` (`idRating`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CEB`.`Theaters`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CEB`.`Theaters` (
  `idTheaters` INT NOT NULL,
  `numRows` INT NULL,
  `numCols` INT NULL,
  PRIMARY KEY (`idTheaters`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CEB`.`Seat`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CEB`.`Seat` (
  `idSeat` INT NOT NULL,
  `tID` INT NULL,
  `row` INT NULL,
  `col` INT NULL,
  PRIMARY KEY (`idSeat`),
  INDEX `tID_idx` (`tID` ASC) VISIBLE,
  CONSTRAINT `tID`
    FOREIGN KEY (`tID`)
    REFERENCES `CEB`.`Theaters` (`idTheaters`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CEB`.`Showing`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CEB`.`Showing` (
  `idShowing` INT NOT NULL,
  `movieID` INT NULL,
  `theaterID` INT NULL,
  `viewingTime` VARCHAR(45) NULL,
  `viewingDate` DATE NULL,
  `seatsAvaliable` INT NULL,
  PRIMARY KEY (`idShowing`),
  INDEX `movieID_idx` (`movieID` ASC) VISIBLE,
  INDEX `theaterID_idx` (`theaterID` ASC) VISIBLE,
  CONSTRAINT `movieID`
    FOREIGN KEY (`movieID`)
    REFERENCES `CEB`.`Movie` (`idMovie`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `theaterID`
    FOREIGN KEY (`theaterID`)
    REFERENCES `CEB`.`Theaters` (`idTheaters`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CEB`.`Prices`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CEB`.`Prices` (
  `idPrices` INT NOT NULL,
  `priceCategory` VARCHAR(45) NULL,
  `price` DECIMAL(45) NULL,
  PRIMARY KEY (`idPrices`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CEB`.`Booking`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CEB`.`Booking` (
  `idBooking` INT NOT NULL,
  `userIDF` INT NULL,
  `showingID` INT NULL,
  `promotionID` INT NULL,
  `accountsID` INT NULL,
  `numTickets` INT NULL,
  `pricingID` INT NULL,
  PRIMARY KEY (`idBooking`),
  INDEX `showingID_idx` (`showingID` ASC) VISIBLE,
  INDEX `accountsID_idx` (`accountsID` ASC) VISIBLE,
  INDEX `promotionID_idx` (`promotionID` ASC) VISIBLE,
  INDEX `userID_idx` (`userIDF` ASC) VISIBLE,
  INDEX `pricingID_idx` (`pricingID` ASC) VISIBLE,
  CONSTRAINT `showingID`
    FOREIGN KEY (`showingID`)
    REFERENCES `CEB`.`Showing` (`idShowing`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `accountsID`
    FOREIGN KEY (`accountsID`)
    REFERENCES `CEB`.`Accounts` (`idAccounts`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `promotionID`
    FOREIGN KEY (`promotionID`)
    REFERENCES `CEB`.`Promotions` (`idPromotions`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `userIDF`
    FOREIGN KEY (`userIDF`)
    REFERENCES `CEB`.`Users` (`UserID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `pricingID`
    FOREIGN KEY (`pricingID`)
    REFERENCES `CEB`.`Prices` (`idPrices`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CEB`.`Ticket`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CEB`.`Ticket` (
  `idTicket` INT NOT NULL,
  `bookingID` INT NULL,
  `seatID` INT NULL,
  `age` INT NULL,
  `priceCategory` INT NULL,
  PRIMARY KEY (`idTicket`),
  INDEX `seatID_idx` (`seatID` ASC) VISIBLE,
  INDEX `bookingID_idx` (`bookingID` ASC) VISIBLE,
  INDEX `priceCategory_idx` (`priceCategory` ASC) VISIBLE,
  CONSTRAINT `bookingID`
    FOREIGN KEY (`bookingID`)
    REFERENCES `CEB`.`Booking` (`idBooking`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `seatID`
    FOREIGN KEY (`seatID`)
    REFERENCES `CEB`.`Seat` (`idSeat`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `priceCategory`
    FOREIGN KEY (`priceCategory`)
    REFERENCES `CEB`.`Prices` (`idPrices`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `CEB`.`UserTypes`
-- -----------------------------------------------------
START TRANSACTION;
USE `CEB`;
INSERT INTO `CEB`.`UserTypes` (`UserTypeID`, `UserTypeName`) VALUES (1, 'Admin');
INSERT INTO `CEB`.`UserTypes` (`UserTypeID`, `UserTypeName`) VALUES (2, 'Customer');
INSERT INTO `CEB`.`UserTypes` (`UserTypeID`, `UserTypeName`) VALUES (3, 'Employee');

COMMIT;


-- -----------------------------------------------------
-- Data for table `CEB`.`Status`
-- -----------------------------------------------------
START TRANSACTION;
USE `CEB`;
INSERT INTO `CEB`.`Status` (`idStatus`, `statusType`) VALUES (1, 'activeCustomer');
INSERT INTO `CEB`.`Status` (`idStatus`, `statusType`) VALUES (2, 'inactiveCustomer');
INSERT INTO `CEB`.`Status` (`idStatus`, `statusType`) VALUES (3, 'activeEmployee');
INSERT INTO `CEB`.`Status` (`idStatus`, `statusType`) VALUES (4, 'inactiveEmployee');
INSERT INTO `CEB`.`Status` (`idStatus`, `statusType`) VALUES (5, 'activeAdmin');
INSERT INTO `CEB`.`Status` (`idStatus`, `statusType`) VALUES (6, 'inactiveAdmin');

COMMIT;


-- -----------------------------------------------------
-- Data for table `CEB`.`Rating`
-- -----------------------------------------------------
START TRANSACTION;
USE `CEB`;
INSERT INTO `CEB`.`Rating` (`idRating`, `RatingCode`) VALUES (1, 'G');
INSERT INTO `CEB`.`Rating` (`idRating`, `RatingCode`) VALUES (2, 'PG');
INSERT INTO `CEB`.`Rating` (`idRating`, `RatingCode`) VALUES (3, 'PG-13');
INSERT INTO `CEB`.`Rating` (`idRating`, `RatingCode`) VALUES (4, 'R');
INSERT INTO `CEB`.`Rating` (`idRating`, `RatingCode`) VALUES (5, 'NC-17');
INSERT INTO `CEB`.`Rating` (`idRating`, `RatingCode`) VALUES (6, 'NR');

COMMIT;


-- -----------------------------------------------------
-- Data for table `CEB`.`Prices`
-- -----------------------------------------------------
START TRANSACTION;
USE `CEB`;
INSERT INTO `CEB`.`Prices` (`idPrices`, `priceCategory`, `price`) VALUES (1, 'child', 7.00);
INSERT INTO `CEB`.`Prices` (`idPrices`, `priceCategory`, `price`) VALUES (2, 'adult', 10.00);
INSERT INTO `CEB`.`Prices` (`idPrices`, `priceCategory`, `price`) VALUES (3, 'senior', 8.00);

COMMIT;

